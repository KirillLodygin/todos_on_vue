{"version":3,"file":"js/470.cb2d1140.js","mappings":"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","sources":["webpack://my-project/./src/views/TodoView.vue?bab4","webpack://my-project/./src/views/TodoView.vue","webpack://my-project/./src/components/NewTodoForm.vue?00bb","webpack://my-project/./src/components/NewTodoForm.vue","webpack://my-project/./src/components/NewTodoForm.vue?7feb","webpack://my-project/./src/components/TodosComponent.vue?7e7c","webpack://my-project/./src/components/TodosComponent.vue","webpack://my-project/./src/components/TodosComponent.vue?b979","webpack://my-project/./src/views/TodoView.vue?2f12","webpack://my-project/./src/components/DialogWindow.vue?2b48","webpack://my-project/./src/components/DialogWindow.vue","webpack://my-project/./src/components/DialogWindow.vue?f3fe"],"sourcesContent":["import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"p-10\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_NewTodoForm = _resolveComponent(\"NewTodoForm\")!\n  const _component_TodosComponent = _resolveComponent(\"TodosComponent\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[0] || (_cache[0] = _createElementVNode(\"h1\", { class: \"text-4xl font-bold mb-6 pb-2\" }, \"TODO_LIST\", -1)),\n    _createElementVNode(\"section\", null, [\n      _createVNode(_component_NewTodoForm)\n    ]),\n    _createElementVNode(\"section\", null, [\n      _createVNode(_component_TodosComponent)\n    ])\n  ]))\n}","<template>\n  <div class=\"p-10\">\n    <h1 class=\"text-4xl font-bold mb-6 pb-2\">TODO_LIST</h1>\n    <section>\n      <NewTodoForm />\n    </section>\n    <section>\n      <TodosComponent />\n    </section>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport NewTodoForm from '@/components/NewTodoForm.vue'\nimport TodosComponent from '@/components/TodosComponent.vue'\n\nexport default defineComponent({\n  components: {\n    TodosComponent,\n    NewTodoForm,\n  },\n})\n</script>\n\n<style scoped></style>\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, vShow as _vShow } from \"vue\"\n\nconst _hoisted_1 = { class: \"form-wrap\" }\nconst _hoisted_2 = { class: \"flex items-center justify-between\" }\nconst _hoisted_3 = { class: \"toggle-buttons\" }\nconst _hoisted_4 = { key: 0 }\nconst _hoisted_5 = { class: \"form-block\" }\nconst _hoisted_6 = { class: \"form-block\" }\nconst _hoisted_7 = { class: \"buttons-group\" }\nconst _hoisted_8 = { class: \"attention-message\" }\n\nimport { ref } from 'vue'\nimport { computed } from 'vue'\nimport type { TaskType, TodoType } from '@/types'\nimport { useTodosStore } from '@/store/todoList.store'\nimport '@/assets/css/styles.css'\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'NewTodoForm',\n  setup(__props) {\n\nconst taskTitle = ref<string>('')\nconst tasks = ref<string>('')\nconst entersCount = ref<number>(1)\nconst isAttention = ref<boolean>(false)\nconst isShowed = ref<boolean>(false)\n\nconst todosStore = useTodosStore()\n\nconst lastTodoId = computed(() => {\n  if (!todosStore.todoList.length) return 0\n  return todosStore.todoList[todosStore.todoList.length - 1].id\n})\n\nconst handleInput = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  taskTitle.value = target.value.toUpperCase()\n}\n\nconst onFocus = () => {\n  isAttention.value = false\n  if (!tasks.value) {\n    tasks.value = `${entersCount.value}. `\n  }\n}\n\nconst handleKeyDown = (event: KeyboardEvent) => {\n  if (event.key === 'Enter') {\n    event.preventDefault()\n    entersCount.value += 1\n    tasks.value += `\\n${entersCount.value}. `\n  }\n}\n\nconst updateRefs = () => {\n  tasks.value = ''\n  taskTitle.value = ''\n  entersCount.value = 1\n  isAttention.value = false\n}\n\nconst deleteTask = (event: Event) => {\n  event.preventDefault()\n  updateRefs()\n}\n\nconst createTask = (event: Event) => {\n  event.preventDefault()\n  if (tasks.value.length && taskTitle.value.length) {\n    const tasksArr: Array<TaskType> = tasks.value.split('\\n').map((task, index) => ({\n      id: index + 1,\n      task: task,\n      isDone: false,\n    }))\n    const newTodo: TodoType = {\n      id: lastTodoId.value + 1,\n      title: taskTitle.value,\n      tasks: tasksArr,\n    }\n    todosStore.createNewTodo(newTodo)\n    updateRefs()\n    return\n  }\n  isAttention.value = true\n}\n\nconst onHide = () => {\n  isShowed.value = false\n}\n\nconst onShow = () => {\n  isShowed.value = true\n}\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"Create new todo\", -1)),\n      _createElementVNode(\"div\", _hoisted_3, [\n        (isShowed.value)\n          ? (_openBlock(), _createElementBlock(\"button\", {\n              key: 0,\n              class: \"button-default\",\n              onClick: onHide\n            }, \"Hide\"))\n          : (_openBlock(), _createElementBlock(\"button\", {\n              key: 1,\n              class: \"button-destructive\",\n              onClick: onShow\n            }, \"Show!\"))\n      ])\n    ]),\n    (isShowed.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n          _createElementVNode(\"form\", null, [\n            _createElementVNode(\"div\", _hoisted_5, [\n              _cache[4] || (_cache[4] = _createElementVNode(\"label\", { for: \"name\" }, \"Your new task name\", -1)),\n              _withDirectives(_createElementVNode(\"input\", {\n                id: \"name\",\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((taskTitle).value = $event)),\n                onFocus: _cache[1] || (_cache[1] = \n              () => {\n                isAttention.value = false\n              }\n            ),\n                type: \"text\",\n                placeholder: \"Your new todo name\",\n                onInput: handleInput\n              }, null, 544), [\n                [_vModelText, taskTitle.value]\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_6, [\n              _cache[5] || (_cache[5] = _createElementVNode(\"label\", { for: \"tasks\" }, \"Your new task\", -1)),\n              _withDirectives(_createElementVNode(\"textarea\", {\n                id: \"tasks\",\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((tasks).value = $event)),\n                onFocus: onFocus,\n                onKeydown: handleKeyDown,\n                placeholder: \"Type new task here.\",\n                rows: \"5\",\n                class: \"fixed-textarea\"\n              }, null, 544), [\n                [_vModelText, tasks.value]\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_7, [\n              _withDirectives(_createElementVNode(\"p\", _hoisted_8, \"All fields for creation are not filled in!\", 512), [\n                [_vShow, isAttention.value]\n              ]),\n              _createElementVNode(\"button\", {\n                class: \"button-default\",\n                onClick: deleteTask\n              }, \"Cancel\"),\n              _createElementVNode(\"button\", {\n                class: \"button-secondary\",\n                onClick: createTask\n              }, \"Create!\")\n            ])\n          ])\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"form-wrap\">\n    <div class=\"flex items-center justify-between\">\n      <h2>Create new todo</h2>\n      <div class=\"toggle-buttons\">\n        <button v-if=\"isShowed\" class=\"button-default\" @click=\"onHide\">Hide</button>\n        <button v-else class=\"button-destructive\" @click=\"onShow\">Show!</button>\n      </div>\n    </div>\n\n    <div v-if=\"isShowed\">\n      <form>\n        <div class=\"form-block\">\n          <label for=\"name\">Your new task name</label>\n          <input\n            id=\"name\"\n            v-model=\"taskTitle\"\n            @focus=\"\n              () => {\n                isAttention = false\n              }\n            \"\n            type=\"text\"\n            placeholder=\"Your new todo name\"\n            @input=\"handleInput\"\n          />\n        </div>\n\n        <div class=\"form-block\">\n          <label for=\"tasks\">Your new task</label>\n          <textarea\n            id=\"tasks\"\n            v-model=\"tasks\"\n            @focus=\"onFocus\"\n            @keydown=\"handleKeyDown\"\n            placeholder=\"Type new task here.\"\n            rows=\"5\"\n            class=\"fixed-textarea\"\n          ></textarea>\n        </div>\n\n        <div class=\"buttons-group\">\n          <p v-show=\"isAttention\" class=\"attention-message\">All fields for creation are not filled in!</p>\n          <button class=\"button-default\" @click=\"deleteTask\">Cancel</button>\n          <button class=\"button-secondary\" @click=\"createTask\">Create!</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { computed } from 'vue'\nimport type { TaskType, TodoType } from '@/types'\nimport { useTodosStore } from '@/store/todoList.store'\nimport '@/assets/css/styles.css'\n\nconst taskTitle = ref<string>('')\nconst tasks = ref<string>('')\nconst entersCount = ref<number>(1)\nconst isAttention = ref<boolean>(false)\nconst isShowed = ref<boolean>(false)\n\nconst todosStore = useTodosStore()\n\nconst lastTodoId = computed(() => {\n  if (!todosStore.todoList.length) return 0\n  return todosStore.todoList[todosStore.todoList.length - 1].id\n})\n\nconst handleInput = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  taskTitle.value = target.value.toUpperCase()\n}\n\nconst onFocus = () => {\n  isAttention.value = false\n  if (!tasks.value) {\n    tasks.value = `${entersCount.value}. `\n  }\n}\n\nconst handleKeyDown = (event: KeyboardEvent) => {\n  if (event.key === 'Enter') {\n    event.preventDefault()\n    entersCount.value += 1\n    tasks.value += `\\n${entersCount.value}. `\n  }\n}\n\nconst updateRefs = () => {\n  tasks.value = ''\n  taskTitle.value = ''\n  entersCount.value = 1\n  isAttention.value = false\n}\n\nconst deleteTask = (event: Event) => {\n  event.preventDefault()\n  updateRefs()\n}\n\nconst createTask = (event: Event) => {\n  event.preventDefault()\n  if (tasks.value.length && taskTitle.value.length) {\n    const tasksArr: Array<TaskType> = tasks.value.split('\\n').map((task, index) => ({\n      id: index + 1,\n      task: task,\n      isDone: false,\n    }))\n    const newTodo: TodoType = {\n      id: lastTodoId.value + 1,\n      title: taskTitle.value,\n      tasks: tasksArr,\n    }\n    todosStore.createNewTodo(newTodo)\n    updateRefs()\n    return\n  }\n  isAttention.value = true\n}\n\nconst onHide = () => {\n  isShowed.value = false\n}\n\nconst onShow = () => {\n  isShowed.value = true\n}\n\n</script>\n\n<style scoped></style>","import script from \"./NewTodoForm.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./NewTodoForm.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"todo-list-wrapp\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"clear-button-block\"\n}\nconst _hoisted_3 = {\n  key: 1,\n  class: \"todo-list-block\"\n}\nconst _hoisted_4 = [\"onClick\"]\nconst _hoisted_5 = { class: \"todo-header\" }\nconst _hoisted_6 = [\"onClick\"]\nconst _hoisted_7 = {\n  key: 1,\n  class: \"ellipsis-text\"\n}\n\nimport { computed, onBeforeMount, ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useTodosStore } from '@/store/todoList.store'\nimport DialogWindow from './DialogWindow.vue'\nimport '@/assets/css/styles.css'\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'TodosComponent',\n  setup(__props) {\n\nconst router = useRouter()\n\nconst todosStore = useTodosStore()\n\nconst showDialog = ref<boolean>(false)\nconst idToDelete = ref<null | number>(null)\n\nconst todoList = computed(() => todosStore.todoList)\nconst isNewTodoListStarted = computed(() => todosStore.isNewTodoListStarted)\n\nonBeforeMount(() => {\n  const todoJSON = localStorage.getItem('todoList') || ''\n  if (todoJSON.length) {\n    todosStore.setTodoList(todoJSON)\n    return\n  }\n\n  if (!todoList.value.length && !isNewTodoListStarted.value) {\n    router.push('/')\n  }\n})\n\nconst returnTaskString = (str: string) => {\n  let newStr: string | Array<string> = str.length > 50 ? str.slice(0, 47) + '...' : str\n  newStr = newStr.split('. ')\n  newStr[0] = `${newStr[0]}.`\n  return newStr\n}\n\nconst selectToView = (id: number) => {\n  todosStore.updateOpenTodoId(id)\n  localStorage.setItem('todoId', String(id))\n  router.push(`/todo_list/${id}`)\n}\n\nconst clearTodos = (event: Event) => {\n  event.preventDefault()\n  showDialog.value = true\n}\n\nconst closeDialog = () => {\n  showDialog.value = false\n}\n\nconst deleteTodoPermanently = () => {\n  if (idToDelete.value) {\n    todosStore.deleteTodo(idToDelete.value)\n    idToDelete.value = null\n  } else {\n    todosStore.clearTodoList()\n  }\n  showDialog.value = false\n}\n\nconst deleteTodo = (id: number) => {\n  showDialog.value = true\n  idToDelete.value = id\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (todoList.value.length)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", null, _toDisplayString(todoList.value.length) + \" items in list\", 1),\n          _createElementVNode(\"button\", {\n            class: \"button-default\",\n            onClick: _cache[0] || (_cache[0] = ($event: any) => (clearTodos($event)))\n          }, \"Clear Todos\")\n        ]))\n      : _createCommentVNode(\"\", true),\n    _cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"TODOS\", -1)),\n    (todoList.value.length)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(todoList.value, (todo) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n              key: todo.id,\n              class: \"todo-block\"\n            }, [\n              _createElementVNode(\"button\", {\n                class: \"button-transparent\",\n                onClick: ($event: any) => (selectToView(todo.id))\n              }, [\n                _createElementVNode(\"div\", _hoisted_5, _toDisplayString(todo.title.toUpperCase()), 1)\n              ], 8, _hoisted_4),\n              _createElementVNode(\"button\", {\n                class: \"button-default\",\n                onClick: ($event: any) => (deleteTodo(todo.id))\n              }, \"Delete todo!\", 8, _hoisted_6),\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(todo.tasks, (task, index) => {\n                return (_openBlock(), _createElementBlock(\"div\", {\n                  key: task.id,\n                  class: \"todo-body\"\n                }, [\n                  (index < 5)\n                    ? (_openBlock(true), _createElementBlock(_Fragment, { key: 0 }, _renderList(returnTaskString(task.task), (item) => {\n                        return (_openBlock(), _createElementBlock(\"div\", {\n                          key: item,\n                          class: _normalizeClass({ 'text-red-700': task.isDone })\n                        }, _toDisplayString(item), 3))\n                      }), 128))\n                    : _createCommentVNode(\"\", true),\n                  (index === 5)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, \"...\"))\n                    : _createCommentVNode(\"\", true)\n                ]))\n              }), 128))\n            ]))\n          }), 128))\n        ]))\n      : _createCommentVNode(\"\", true),\n    (showDialog.value)\n      ? (_openBlock(), _createBlock(DialogWindow, {\n          key: 2,\n          title: `Delete todo ?`,\n          description: `Are you sure you want to delete todo?`,\n          onCloseDialog: closeDialog,\n          onDeleteTodoPermanently: deleteTodoPermanently\n        }))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"todo-list-wrapp\">\n    <div v-if=\"todoList.length\" class=\"clear-button-block\">\n      <div>{{ todoList.length }} items in list</div>\n      <button class=\"button-default\" @click=\"clearTodos($event)\">Clear Todos</button>\n    </div>\n\n    <h2>TODOS</h2>\n    <template v-if=\"todoList.length\">\n      <div class=\"todo-list-block\">\n        <div v-for=\"todo in todoList\" :key=\"todo.id\" class=\"todo-block\">\n          <button class=\"button-transparent\" @click=\"selectToView(todo.id)\">\n            <div class=\"todo-header\">\n              {{ todo.title.toUpperCase() }}\n            </div>\n          </button>\n          <button class=\"button-default\" @click=\"deleteTodo(todo.id)\">Delete todo!</button>\n\n          <div v-for=\"(task, index) in todo.tasks\" :key=\"task.id\" class=\"todo-body\">\n            <template v-if=\"index < 5\">\n              <div v-for=\"item in returnTaskString(task.task)\" :key=\"item\" :class=\"{ 'text-red-700': task.isDone }\">\n                {{ item }}\n              </div>\n            </template>\n            <template v-if=\"index === 5\">\n              <div class=\"ellipsis-text\">...</div>\n            </template>\n          </div>\n        </div>\n      </div>\n    </template>\n\n    <DialogWindow\n      v-if=\"showDialog\"\n      :title=\"`Delete todo ?`\"\n      :description=\"`Are you sure you want to delete todo?`\"\n      @closeDialog=\"closeDialog\"\n      @deleteTodoPermanently=\"deleteTodoPermanently\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, onBeforeMount, ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useTodosStore } from '@/store/todoList.store'\nimport DialogWindow from './DialogWindow.vue'\nimport '@/assets/css/styles.css'\n\nconst router = useRouter()\n\nconst todosStore = useTodosStore()\n\nconst showDialog = ref<boolean>(false)\nconst idToDelete = ref<null | number>(null)\n\nconst todoList = computed(() => todosStore.todoList)\nconst isNewTodoListStarted = computed(() => todosStore.isNewTodoListStarted)\n\nonBeforeMount(() => {\n  const todoJSON = localStorage.getItem('todoList') || ''\n  if (todoJSON.length) {\n    todosStore.setTodoList(todoJSON)\n    return\n  }\n\n  if (!todoList.value.length && !isNewTodoListStarted.value) {\n    router.push('/')\n  }\n})\n\nconst returnTaskString = (str: string) => {\n  let newStr: string | Array<string> = str.length > 50 ? str.slice(0, 47) + '...' : str\n  newStr = newStr.split('. ')\n  newStr[0] = `${newStr[0]}.`\n  return newStr\n}\n\nconst selectToView = (id: number) => {\n  todosStore.updateOpenTodoId(id)\n  localStorage.setItem('todoId', String(id))\n  router.push(`/todo_list/${id}`)\n}\n\nconst clearTodos = (event: Event) => {\n  event.preventDefault()\n  showDialog.value = true\n}\n\nconst closeDialog = () => {\n  showDialog.value = false\n}\n\nconst deleteTodoPermanently = () => {\n  if (idToDelete.value) {\n    todosStore.deleteTodo(idToDelete.value)\n    idToDelete.value = null\n  } else {\n    todosStore.clearTodoList()\n  }\n  showDialog.value = false\n}\n\nconst deleteTodo = (id: number) => {\n  showDialog.value = true\n  idToDelete.value = id\n}\n</script>\n\n<style scoped></style>\n","import script from \"./TodosComponent.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./TodosComponent.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { render } from \"./TodoView.vue?vue&type=template&id=d082f12c&ts=true\"\nimport script from \"./TodoView.vue?vue&type=script&lang=ts\"\nexport * from \"./TodoView.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  id: \"modal\",\n  class: \"modal\"\n}\nconst _hoisted_2 = { class: \"modal-content\" }\nconst _hoisted_3 = { class: \"modal-header\" }\nconst _hoisted_4 = { id: \"modal-title\" }\nconst _hoisted_5 = { class: \"modal-body\" }\n\n\nimport '@/assets/css/styles.css'\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'DialogWindow',\n  props: {\n  title: {\n    type: String,\n    required: true,\n  },\n  description: {\n    type: String,\n    required: true,\n  },\n},\n  emits: ['closeDialog', 'deleteTodoPermanently'],\n  setup(__props, { emit: __emit }) {\n\nconst props = __props\n\nconst emit = __emit\n\nconst closeDialog = () => {\n  emit('closeDialog')\n}\n\nconst deleteTodoPermanently = () => {\n  emit('deleteTodoPermanently')\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"h2\", _hoisted_4, _toDisplayString(props.title), 1),\n        _createElementVNode(\"span\", {\n          class: \"close\",\n          id: \"close-modal\",\n          onClick: closeDialog\n        }, \"×\")\n      ]),\n      _createElementVNode(\"div\", _hoisted_5, [\n        _createElementVNode(\"p\", null, _toDisplayString(props.description), 1)\n      ]),\n      _createElementVNode(\"div\", { class: \"modal-footer buttons-group\" }, [\n        _createElementVNode(\"button\", {\n          id: \"no-button\",\n          class: \"button button-default\",\n          onClick: closeDialog\n        }, \"No\"),\n        _createElementVNode(\"button\", {\n          id: \"ok-button\",\n          class: \"button button-secondary\",\n          onClick: deleteTodoPermanently\n        }, \"Ok\")\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\n  <div id=\"modal\" class=\"modal\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 id=\"modal-title\">{{ props.title }}</h2>\n        <span class=\"close\" id=\"close-modal\" @click=\"closeDialog\">&times;</span>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ props.description }}</p>\n      </div>\n      <div class=\"modal-footer buttons-group\">\n        <button id=\"no-button\" class=\"button button-default\" @click=\"closeDialog\">No</button>\n        <button id=\"ok-button\" class=\"button button-secondary\" @click=\"deleteTodoPermanently\">Ok</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { defineProps, defineEmits } from 'vue'\nimport '@/assets/css/styles.css'\n\nconst props = defineProps({\n  title: {\n    type: String,\n    required: true,\n  },\n  description: {\n    type: String,\n    required: true,\n  },\n})\n\nconst emit = defineEmits(['closeDialog', 'deleteTodoPermanently'])\n\nconst closeDialog = () => {\n  emit('closeDialog')\n}\n\nconst deleteTodoPermanently = () => {\n  emit('deleteTodoPermanently')\n}\n</script>\n\n<style scoped></style>\n","import script from \"./DialogWindow.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./DialogWindow.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_hoisted_1","class","render","_ctx","_cache","$props","$setup","$data","$options","_component_NewTodoForm","_resolveComponent","_component_TodosComponent","_openBlock","_createElementBlock","_createElementVNode","_createVNode","_hoisted_2","_hoisted_3","_hoisted_4","key","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_defineComponent","__name","setup","__props","taskTitle","ref","tasks","entersCount","isAttention","isShowed","todosStore","useTodosStore","lastTodoId","computed","todoList","length","id","handleInput","event","target","value","toUpperCase","onFocus","handleKeyDown","preventDefault","updateRefs","deleteTask","createTask","tasksArr","split","map","task","index","isDone","newTodo","title","createNewTodo","onHide","onShow","onClick","for","_withDirectives","$event","type","placeholder","onInput","_vModelText","onKeydown","rows","_vShow","_createCommentVNode","__exports__","router","useRouter","showDialog","idToDelete","isNewTodoListStarted","onBeforeMount","todoJSON","localStorage","getItem","setTodoList","push","returnTaskString","str","newStr","slice","selectToView","updateOpenTodoId","setItem","String","clearTodos","closeDialog","deleteTodoPermanently","deleteTodo","clearTodoList","_toDisplayString","_Fragment","_renderList","todo","item","_normalizeClass","_createBlock","DialogWindow","description","onCloseDialog","onDeleteTodoPermanently","defineComponent","components","TodosComponent","NewTodoForm","props","required","emits","emit","__emit"],"sourceRoot":""}