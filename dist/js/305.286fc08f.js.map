{"version":3,"file":"js/305.286fc08f.js","mappings":"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","sources":["webpack://my-project/./src/views/TodoDetail.vue?1cb3","webpack://my-project/./src/views/TodoDetail.vue","webpack://my-project/./src/components/TaskTitle.vue?3d65","webpack://my-project/./src/components/TaskTitle.vue","webpack://my-project/./src/components/TaskTitle.vue?767e","webpack://my-project/./src/components/TasksBody.vue?9f08","webpack://my-project/./src/components/TasksBody.vue","webpack://my-project/./src/components/TasksBody.vue?7ba4","webpack://my-project/./src/components/TasksComponent.vue?e25e","webpack://my-project/./src/components/TasksComponent.vue","webpack://my-project/./src/components/TasksComponent.vue?db72","webpack://my-project/./src/views/TodoDetail.vue?8768","webpack://my-project/./src/components/DialogWindow.vue?2b48","webpack://my-project/./src/components/DialogWindow.vue","webpack://my-project/./src/components/DialogWindow.vue?f3fe"],"sourcesContent":["import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_TasksComponent = _resolveComponent(\"TasksComponent\")!\n\n  return (_openBlock(), _createBlock(_component_TasksComponent))\n}","<template>\n  <TasksComponent />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport TasksComponent from '@/components/TasksComponent.vue'\nexport default defineComponent({\n  components: {\n    TasksComponent,\n  },\n})\n</script>\n\n<style scoped></style>\n","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"task-title-wrapp\"\n}\nconst _hoisted_2 = { key: 1 }\nconst _hoisted_3 = { class: \"new-name\" }\n\nimport { ref } from 'vue'\nimport '@/assets/css/styles.css'\n\ninterface Props {\n  newTitle: string\n  oldTitle: string\n}\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'TaskTitle',\n  props: {\n    newTitle: {},\n    oldTitle: {}\n  },\n  emits: ['updateNewTitle'],\n  setup(__props: any, { emit: __emit }) {\n\nconst props = __props\n\nconst titleIsNotEditing = ref<boolean>(true)\nconst taskTitle = ref<string>(props.oldTitle.toUpperCase() || '')\nconst emit = __emit\n\nconst cancelEditing = () => {\n  emit('updateNewTitle', '')\n  titleIsNotEditing.value = true\n}\n\nconst editTitle = () => {\n  titleIsNotEditing.value = false\n}\n\nconst setNewTaskTitle = () => {\n  emit('updateNewTitle', taskTitle.value)\n  titleIsNotEditing.value = true\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (titleIsNotEditing.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _createElementVNode(\"h2\", null, _toDisplayString(_ctx.newTitle.toUpperCase() || _ctx.oldTitle.toUpperCase()), 1),\n          _createElementVNode(\"div\", null, [\n            (!_ctx.newTitle.length)\n              ? (_openBlock(), _createElementBlock(\"button\", {\n                  key: 0,\n                  class: \"button-default\",\n                  onClick: editTitle\n                }, \"Edit\"))\n              : (_openBlock(), _createElementBlock(\"button\", {\n                  key: 1,\n                  class: \"button-default\",\n                  onClick: cancelEditing\n                }, \"Cancel Editing\"))\n          ])\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _cache[1] || (_cache[1] = _createElementVNode(\"label\", { for: \"name\" }, \"New todo name\", -1)),\n            _withDirectives(_createElementVNode(\"input\", {\n              id: \"name\",\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((taskTitle).value = $event)),\n              type: \"text\",\n              placeholder: \"Your new todo name\"\n            }, null, 512), [\n              [_vModelText, taskTitle.value]\n            ])\n          ]),\n          _createElementVNode(\"div\", { class: \"task-title-button-group\" }, [\n            _createElementVNode(\"button\", {\n              class: \"button-destructive\",\n              onClick: cancelEditing\n            }, \"Cancel\"),\n            _createElementVNode(\"button\", {\n              class: \"button-secondary\",\n              onClick: setNewTaskTitle\n            }, \"Done!\")\n          ])\n        ]))\n  ]))\n}\n}\n\n})","<template>\n  <div>\n    <div v-if=\"titleIsNotEditing\" class=\"task-title-wrapp\">\n      <h2>{{ newTitle.toUpperCase() || oldTitle.toUpperCase() }}</h2>\n      <div>\n        <button v-if=\"!newTitle.length\" class=\"button-default\" @click=\"editTitle\">Edit</button>\n        <button v-else class=\"button-default\" @click=\"cancelEditing\">Cancel Editing</button>\n      </div>\n    </div>\n\n    <div v-else>\n      <div class=\"new-name\">\n        <label for=\"name\">New todo name</label>\n        <input id=\"name\" v-model=\"taskTitle\" type=\"text\" placeholder=\"Your new todo name\" />\n      </div>\n      <div class=\"task-title-button-group\">\n        <button class=\"button-destructive\" @click=\"cancelEditing\">Cancel</button>\n        <button class=\"button-secondary\" @click=\"setNewTaskTitle\">Done!</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, defineProps, defineEmits } from 'vue'\nimport '@/assets/css/styles.css'\n\ninterface Props {\n  newTitle: string\n  oldTitle: string\n}\nconst props = defineProps<Props>()\n\nconst titleIsNotEditing = ref<boolean>(true)\nconst taskTitle = ref<string>(props.oldTitle.toUpperCase() || '')\nconst emit = defineEmits(['updateNewTitle'])\n\nconst cancelEditing = () => {\n  emit('updateNewTitle', '')\n  titleIsNotEditing.value = true\n}\n\nconst editTitle = () => {\n  titleIsNotEditing.value = false\n}\n\nconst setNewTaskTitle = () => {\n  emit('updateNewTitle', taskTitle.value)\n  titleIsNotEditing.value = true\n}\n</script>\n\n<style scoped></style>\n","import script from \"./TaskTitle.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./TaskTitle.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, vModelCheckbox as _vModelCheckbox, toDisplayString as _toDisplayString, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"task-body-wrapp\" }\nconst _hoisted_2 = { class: \"task-body\" }\nconst _hoisted_3 = { class: \"task-raw\" }\nconst _hoisted_4 = {\n  key: 0,\n  class: \"task-edit\"\n}\nconst _hoisted_5 = {\n  key: 1,\n  class: \"checkbox-wrapp\"\n}\nconst _hoisted_6 = [\"onUpdate:modelValue\", \"id\"]\nconst _hoisted_7 = [\"for\"]\nconst _hoisted_8 = { class: \"tasks-button-group\" }\nconst _hoisted_9 = [\"onClick\"]\nconst _hoisted_10 = [\"onClick\"]\nconst _hoisted_11 = [\"onClick\"]\nconst _hoisted_12 = { class: \"new-task-wrapp\" }\nconst _hoisted_13 = { class: \"new-task\" }\nconst _hoisted_14 = { key: 0 }\nconst _hoisted_15 = { class: \"task-body-wrapp\" }\nconst _hoisted_16 = { class: \"task-title-button-group\" }\nconst _hoisted_17 = [\"disabled\"]\n\nimport _ from 'lodash'\nimport { reactive, ref, computed } from 'vue'\nimport type { TaskType, currentTasksType } from '@/types'\nimport DialogWindow from './DialogWindow.vue'\nimport '@/assets/css/styles.css'\n\ninterface Props {\n  tasksInStore: TaskType[]\n  tasks: TaskType[]\n}\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'TasksBody',\n  props: {\n    tasksInStore: {},\n    tasks: {}\n  },\n  emits: ['deleteTaskPermanently', 'setNewTaskTitle', 'createTask'],\n  setup(__props: any, { emit: __emit }) {\n\nconst props = __props\n\nconst { cloneDeep } = _\n\nconst emit = __emit\n\nconst showDialog = ref<boolean>(false)\nconst isShowed = ref<boolean>(false)\nconst taskText = ref<string>('')\nconst deletedTaskId = ref<number | null>(null)\nconst currentTasks = reactive<currentTasksType[]>(\n  cloneDeep(\n    props.tasks.map((task) => ({\n      id: task.id,\n      label: task.task.split('. ').splice(1).join('. '),\n    })),\n  ),\n)\nconst editTaskId = ref<number | null>(null)\n\nconst isShowCancelButton = computed(() => {\n  const modifiedTasks: number[] = props.tasks\n    .filter((task) => task.task.split('. ').splice(1).join('. '))\n    .map((task) => task.id)\n\n  const idsForFilter: number[] = []\n\n  modifiedTasks.forEach((id) => {\n    const index1 = props.tasksInStore.findIndex((task) => task.id === id)\n    const index2 = props.tasks.findIndex((task) => task.id === id)\n\n    if (\n      index1 !== -1 &&\n      index2 !== -1 &&\n      props.tasksInStore[index1].task.split('. ').splice(1).join('. ') !==\n        props.tasks[index2].task.split('. ').splice(1).join('. ')\n    ) {\n      idsForFilter.push(id)\n    }\n  })\n\n  return idsForFilter\n})\n\nconst deleteTask = (id: number) => {\n  showDialog.value = true\n  deletedTaskId.value = id\n}\n\nconst closeDialog = () => {\n  showDialog.value = false\n}\n\nconst deleteTaskPermanently = () => {\n  if (deletedTaskId.value) {\n    emit('deleteTaskPermanently', deletedTaskId.value)\n    const index = currentTasks.findIndex((task) => task.id === deletedTaskId.value)\n    currentTasks.splice(index, 1)\n  }\n  deletedTaskId.value = null\n  showDialog.value = false\n}\n\nconst taskById = computed(() => {\n  if (editTaskId.value) {\n    const index = currentTasks.findIndex((task) => task.id === editTaskId.value)\n\n    if (index !== -1) {\n      return currentTasks[index]\n    }\n  }\n  return null\n})\n\nconst getEditTaskId = (id: number) => {\n  editTaskId.value = id\n}\n\nconst cancelEditing = () => {\n  editTaskId.value = null\n}\n\nconst cancelChanges = (id: number) => {\n  emit('setNewTaskTitle', id, '')\n}\n\nconst setNewTaskTitle = () => {\n  const index = currentTasks.findIndex((task) => task.id === editTaskId.value)\n  if (index !== -1) {\n    emit('setNewTaskTitle', editTaskId.value, currentTasks[index].label)\n  }\n\n  editTaskId.value = null\n}\n\nconst onHide = () => {\n  isShowed.value = false\n}\n\nconst onShow = () => {\n  isShowed.value = true\n}\n\nconst deleteNewTask = (event: Event) => {\n  event.preventDefault()\n  taskText.value = ''\n}\n\nconst createTask = (event: Event) => {\n  event.preventDefault()\n\n  currentTasks.push({\n    id: props.tasks[props.tasks.length - 1].id + 1,\n    label: taskText.value,\n  })\n\n  emit('createTask', {\n    id: props.tasks[props.tasks.length - 1].id + 1,\n    task: `${props.tasks.length + 1}. ${taskText.value}`,\n    isDone: false,\n  })\n\n  taskText.value = ''\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _cache[3] || (_cache[3] = _createElementVNode(\"h2\", { class: \"task-body-title\" }, \"TASKS IN TODO\", -1)),\n      _createElementVNode(\"div\", _hoisted_2, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tasks, (task) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: task.id\n          }, [\n            _createElementVNode(\"div\", _hoisted_3, [\n              (editTaskId.value && editTaskId.value === task.id)\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n                    _createElementVNode(\"div\", null, [\n                      _cache[2] || (_cache[2] = _createElementVNode(\"label\", { for: \"name\" }, \"Edit task\", -1)),\n                      _withDirectives(_createElementVNode(\"input\", {\n                        id: \"name\",\n                        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((taskById.value.label) = $event)),\n                        type: \"text\",\n                        class: \"task-input\",\n                        placeholder: \"Edit task\"\n                      }, null, 512), [\n                        [_vModelText, taskById.value.label]\n                      ])\n                    ])\n                  ]))\n                : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                    _withDirectives(_createElementVNode(\"input\", {\n                      type: \"checkbox\",\n                      \"onUpdate:modelValue\": ($event: any) => ((task.isDone) = $event),\n                      id: task.id\n                    }, null, 8, _hoisted_6), [\n                      [_vModelCheckbox, task.isDone]\n                    ]),\n                    _createElementVNode(\"label\", {\n                      for: task.id\n                    }, _toDisplayString(task.task.split('. ').splice(1).join('. ')\n                ? task.task.split('. ').splice(1).join('. ')\n                : _ctx.tasksInStore\n                    .filter((item) => item.id === task.id)[0]\n                    .task.split('. ')\n                    .splice(1)\n                    .join('. ')), 9, _hoisted_7)\n                  ])),\n              _createElementVNode(\"div\", _hoisted_8, [\n                (isShowCancelButton.value.includes(task.id))\n                  ? (_openBlock(), _createElementBlock(\"button\", {\n                      key: 0,\n                      class: \"button-destructive\",\n                      onClick: ($event: any) => (cancelChanges(task.id))\n                    }, \" Cancel Editing \", 8, _hoisted_9))\n                  : _createCommentVNode(\"\", true),\n                (editTaskId.value && editTaskId.value === task.id)\n                  ? (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n                      _createElementVNode(\"button\", {\n                        class: \"button-default\",\n                        onClick: cancelEditing\n                      }, \"Cancel\"),\n                      _createElementVNode(\"button\", {\n                        class: \"button-secondary\",\n                        onClick: setNewTaskTitle\n                      }, \"Done!\")\n                    ], 64))\n                  : (_openBlock(), _createElementBlock(_Fragment, { key: 2 }, [\n                      _createElementVNode(\"button\", {\n                        class: \"button-default\",\n                        onClick: ($event: any) => (getEditTaskId(task.id))\n                      }, \"editTask\", 8, _hoisted_10),\n                      _createElementVNode(\"button\", {\n                        class: \"button-secondary\",\n                        onClick: ($event: any) => (deleteTask(task.id))\n                      }, \"deleteTask\", 8, _hoisted_11)\n                    ], 64))\n              ])\n            ])\n          ]))\n        }), 128))\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_12, [\n      _createElementVNode(\"div\", _hoisted_13, [\n        _cache[4] || (_cache[4] = _createElementVNode(\"h2\", { class: \"text-lg mr-5\" }, \"Create new task\", -1)),\n        _createElementVNode(\"div\", null, [\n          (isShowed.value)\n            ? (_openBlock(), _createElementBlock(\"button\", {\n                key: 0,\n                class: \"button-default\",\n                onClick: onHide\n              }, \"Hide\"))\n            : (_openBlock(), _createElementBlock(\"button\", {\n                key: 1,\n                class: \"button-destructive\",\n                onClick: onShow\n              }, \"Show!\"))\n        ])\n      ]),\n      (isShowed.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [\n            _createElementVNode(\"form\", null, [\n              _createElementVNode(\"div\", _hoisted_15, [\n                _cache[5] || (_cache[5] = _createElementVNode(\"label\", { for: \"name\" }, \"New task\", -1)),\n                _withDirectives(_createElementVNode(\"input\", {\n                  id: \"name\",\n                  \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((taskText).value = $event)),\n                  type: \"text\",\n                  placeholder: \"New task\"\n                }, null, 512), [\n                  [_vModelText, taskText.value]\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_16, [\n                _createElementVNode(\"button\", {\n                  class: \"button-default\",\n                  onClick: deleteNewTask\n                }, \"Cancel\"),\n                _createElementVNode(\"button\", {\n                  class: \"button-secondary\",\n                  disabled: !taskText.value.length,\n                  onClick: createTask\n                }, \"Create!\", 8, _hoisted_17)\n              ])\n            ])\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    (showDialog.value)\n      ? (_openBlock(), _createBlock(DialogWindow, {\n          key: 0,\n          title: `Delete task ?`,\n          description: `Are you sure you want to delete task?`,\n          onCloseDialog: closeDialog,\n          onDeleteTodoPermanently: deleteTaskPermanently\n        }))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\n  <div class=\"task-body-wrapp\">\n    <h2 class=\"task-body-title\">TASKS IN TODO</h2>\n    <div class=\"task-body\">\n      <div v-for=\"task in tasks\" :key=\"task.id\">\n        <div class=\"task-raw\">\n          <div v-if=\"editTaskId && editTaskId === task.id\" class=\"task-edit\">\n            <div>\n              <label for=\"name\">Edit task</label>\n              <input id=\"name\" v-model=\"taskById.label\" type=\"text\" class=\"task-input\" placeholder=\"Edit task\" />\n            </div>\n          </div>\n          <div v-else class=\"checkbox-wrapp\">\n            <input type=\"checkbox\" v-model=\"task.isDone\" :id=\"task.id\" />\n            <label :for=\"task.id\">{{\n              task.task.split('. ').splice(1).join('. ')\n                ? task.task.split('. ').splice(1).join('. ')\n                : tasksInStore\n                    .filter((item) => item.id === task.id)[0]\n                    .task.split('. ')\n                    .splice(1)\n                    .join('. ')\n            }}</label>\n          </div>\n          <div class=\"tasks-button-group\">\n            <button\n              v-if=\"isShowCancelButton.includes(task.id)\"\n              class=\"button-destructive\"\n              @click=\"cancelChanges(task.id)\"\n            >\n              Cancel Editing\n            </button>\n\n            <template v-if=\"editTaskId && editTaskId === task.id\">\n              <button class=\"button-default\" @click=\"cancelEditing\">Cancel</button>\n              <button class=\"button-secondary\" @click=\"setNewTaskTitle\">Done!</button>\n            </template>\n\n            <template v-else>\n              <button class=\"button-default\" @click=\"getEditTaskId(task.id)\">editTask</button>\n              <button class=\"button-secondary\" @click=\"deleteTask(task.id)\">deleteTask</button>\n            </template>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"new-task-wrapp\">\n    <div class=\"new-task\">\n      <h2 class=\"text-lg mr-5\">Create new task</h2>\n      <div>\n        <button class=\"button-default\" v-if=\"isShowed\" @click=\"onHide\">Hide</button>\n        <button v-else class=\"button-destructive\" @click=\"onShow\">Show!</button>\n      </div>\n    </div>\n\n    <div v-if=\"isShowed\">\n      <form>\n        <div class=\"task-body-wrapp\">\n          <label for=\"name\">New task</label>\n          <input id=\"name\" v-model=\"taskText\" type=\"text\" placeholder=\"New task\" />\n        </div>\n\n        <div class=\"task-title-button-group\">\n          <button class=\"button-default\" @click=\"deleteNewTask\">Cancel</button>\n          <button class=\"button-secondary\" :disabled=\"!taskText.length\" @click=\"createTask\">Create!</button>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <DialogWindow\n    v-if=\"showDialog\"\n    :title=\"`Delete task ?`\"\n    :description=\"`Are you sure you want to delete task?`\"\n    @closeDialog=\"closeDialog\"\n    @deleteTodoPermanently=\"deleteTaskPermanently\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport _ from 'lodash'\nimport { reactive, ref, computed, defineProps, defineEmits } from 'vue'\nimport type { TaskType, currentTasksType } from '@/types'\nimport DialogWindow from './DialogWindow.vue'\nimport '@/assets/css/styles.css'\n\ninterface Props {\n  tasksInStore: TaskType[]\n  tasks: TaskType[]\n}\nconst props = defineProps<Props>()\n\nconst { cloneDeep } = _\n\nconst emit = defineEmits(['deleteTaskPermanently', 'setNewTaskTitle', 'createTask'])\n\nconst showDialog = ref<boolean>(false)\nconst isShowed = ref<boolean>(false)\nconst taskText = ref<string>('')\nconst deletedTaskId = ref<number | null>(null)\nconst currentTasks = reactive<currentTasksType[]>(\n  cloneDeep(\n    props.tasks.map((task) => ({\n      id: task.id,\n      label: task.task.split('. ').splice(1).join('. '),\n    })),\n  ),\n)\nconst editTaskId = ref<number | null>(null)\n\nconst isShowCancelButton = computed(() => {\n  const modifiedTasks: number[] = props.tasks\n    .filter((task) => task.task.split('. ').splice(1).join('. '))\n    .map((task) => task.id)\n\n  const idsForFilter: number[] = []\n\n  modifiedTasks.forEach((id) => {\n    const index1 = props.tasksInStore.findIndex((task) => task.id === id)\n    const index2 = props.tasks.findIndex((task) => task.id === id)\n\n    if (\n      index1 !== -1 &&\n      index2 !== -1 &&\n      props.tasksInStore[index1].task.split('. ').splice(1).join('. ') !==\n        props.tasks[index2].task.split('. ').splice(1).join('. ')\n    ) {\n      idsForFilter.push(id)\n    }\n  })\n\n  return idsForFilter\n})\n\nconst deleteTask = (id: number) => {\n  showDialog.value = true\n  deletedTaskId.value = id\n}\n\nconst closeDialog = () => {\n  showDialog.value = false\n}\n\nconst deleteTaskPermanently = () => {\n  if (deletedTaskId.value) {\n    emit('deleteTaskPermanently', deletedTaskId.value)\n    const index = currentTasks.findIndex((task) => task.id === deletedTaskId.value)\n    currentTasks.splice(index, 1)\n  }\n  deletedTaskId.value = null\n  showDialog.value = false\n}\n\nconst taskById = computed(() => {\n  if (editTaskId.value) {\n    const index = currentTasks.findIndex((task) => task.id === editTaskId.value)\n\n    if (index !== -1) {\n      return currentTasks[index]\n    }\n  }\n  return null\n})\n\nconst getEditTaskId = (id: number) => {\n  editTaskId.value = id\n}\n\nconst cancelEditing = () => {\n  editTaskId.value = null\n}\n\nconst cancelChanges = (id: number) => {\n  emit('setNewTaskTitle', id, '')\n}\n\nconst setNewTaskTitle = () => {\n  const index = currentTasks.findIndex((task) => task.id === editTaskId.value)\n  if (index !== -1) {\n    emit('setNewTaskTitle', editTaskId.value, currentTasks[index].label)\n  }\n\n  editTaskId.value = null\n}\n\nconst onHide = () => {\n  isShowed.value = false\n}\n\nconst onShow = () => {\n  isShowed.value = true\n}\n\nconst deleteNewTask = (event: Event) => {\n  event.preventDefault()\n  taskText.value = ''\n}\n\nconst createTask = (event: Event) => {\n  event.preventDefault()\n\n  currentTasks.push({\n    id: props.tasks[props.tasks.length - 1].id + 1,\n    label: taskText.value,\n  })\n\n  emit('createTask', {\n    id: props.tasks[props.tasks.length - 1].id + 1,\n    task: `${props.tasks.length + 1}. ${taskText.value}`,\n    isDone: false,\n  })\n\n  taskText.value = ''\n}\n</script>\n\n<style scoped></style>\n","import script from \"./TasksBody.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./TasksBody.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, unref as _unref, createVNode as _createVNode, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"tasks-button-group\" }\nconst _hoisted_2 = { class: \"task-wrapp\" }\n\nimport _ from 'lodash'\nimport { computed, onBeforeMount, reactive, ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport type { TaskType } from '@/types'\nimport { useTodosStore } from '@/store/todoList.store'\nimport TaskTitle from './TaskTitle.vue'\nimport TasksBody from './TasksBody.vue'\nimport DialogWindow from './DialogWindow.vue'\nimport '@/assets/css/styles.css'\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'TasksComponent',\n  setup(__props) {\n\nconst todosStore = useTodosStore()\nconst router = useRouter()\n\nconst { cloneDeep, isEqual } = _\n\nconst showDialog = ref<boolean>(false)\nconst isChangesNotSaved = ref<boolean>(false)\n\nconst openTodoId = computed(() => todosStore.openTodoId)\nconst newTitle = ref<string>('')\nconst tasks = reactive<TaskType[]>(openTodoId.value ? cloneDeep(todosStore.getTodoById(openTodoId.value).tasks) : [])\nconst isChanged = computed(\n  () =>\n    (openTodoId.value && newTitle.value && todosStore.getTodoById(openTodoId.value).title !== newTitle.value) ||\n    (openTodoId.value && !isEqual(tasks, todosStore.getTodoById(openTodoId.value).tasks)),\n)\n\nonBeforeMount(() => {\n  const url = new URL(window.location.href)\n  const currentId = url.pathname.split('/')[url.pathname.split('/').length - 1]\n  const todoJSON = localStorage.getItem('todoList') || ''\n  const idFromLocalStorage = localStorage.getItem('todoId')\n  if (todoJSON.length) {\n    todosStore.setTodoList(todoJSON)\n    if (idFromLocalStorage && idFromLocalStorage === currentId) {\n      if (!openTodoId.value) {\n        todosStore.updateOpenTodoId(Number(currentId))\n      }\n      if (!tasks.length) {\n        cloneDeep(todosStore.getTodoById(Number(currentId)).tasks).forEach((task) => {\n          tasks.push(task)\n        })\n      }\n      return\n    }\n    router.push('/todo_list')\n    return\n  }\n\n  router.push('/')\n})\n\nconst deleteTodo = () => {\n  showDialog.value = true\n}\n\nconst closeDialog = () => {\n  showDialog.value = false\n  if (isChangesNotSaved.value) {\n    isChangesNotSaved.value = false\n    router.push('/todo_list')\n  }\n}\n\nconst saveChanges = () => {\n  if (isChanged.value && openTodoId.value) {\n    todosStore.updateTodo(openTodoId.value, newTitle.value, tasks)\n    isChangesNotSaved.value = false\n    newTitle.value = ''\n  }\n}\n\nconst doAction = () => {\n  if (isChangesNotSaved.value && openTodoId.value) {\n    todosStore.updateTodo(openTodoId.value, newTitle.value, tasks)\n    showDialog.value = false\n    newTitle.value = ''\n    localStorage.setItem('todoId', String(''))\n    router.push('/todo_list')\n    return\n  }\n\n  if (openTodoId.value) {\n    todosStore.deleteTodo(openTodoId.value)\n  }\n\n  showDialog.value = false\n  localStorage.setItem('todoId', String(''))\n  router.push('/todo_list')\n}\n\nconst returnToTodoList = () => {\n  if (openTodoId.value && !isEqual(tasks, todosStore.getTodoById(openTodoId.value).tasks)) {\n    tasks.forEach((task) => {\n      if (!task.task.split('. ').splice(1).join('. ') && openTodoId.value) {\n        task.task =\n          task.task.split('. ')[0] +\n          '. ' +\n          todosStore\n            .getTodoById(openTodoId.value)\n            .tasks.filter((item) => item.id === task.id)[0]\n            .task.split('. ')\n            .splice(1)\n            .join('. ')\n      }\n    })\n  }\n\n  if (\n    (openTodoId.value && newTitle.value && todosStore.getTodoById(openTodoId.value).title !== newTitle.value) ||\n    (openTodoId.value && !isEqual(tasks, todosStore.getTodoById(openTodoId.value).tasks))\n  ) {\n    isChangesNotSaved.value = true\n    showDialog.value = true\n    return\n  }\n  localStorage.setItem('todoId', String(''))\n  router.push('/todo_list')\n}\n\nconst updateNewTitle = (newVal: string) => {\n  newTitle.value = newVal\n}\n\nconst deleteTaskPermanently = (id: number) => {\n  const index = tasks.findIndex((task) => task.id === id)\n  if (index !== -1) {\n    tasks.splice(index, 1)\n    tasks.forEach((task, index) => {\n      const label = task.task.split('. ')\n      label[0] = `${index + 1}`\n      task.task = label.join('. ')\n    })\n  }\n}\n\nconst setNewTaskTitle = (id: number, label: string) => {\n  const index = tasks.findIndex((task) => task.id === id)\n  if (index !== -1) {\n    tasks.forEach((task) => {\n      task.task = task.task.split('. ').splice(1).join('. ')\n    })\n    tasks[index].task = label\n    tasks.forEach((task, index) => {\n      task.task = `${index + 1}. ${task.task}`\n    })\n  }\n}\n\nconst undoChanges = () => {\n  if (openTodoId.value) {\n    newTitle.value = ''\n    tasks.splice(0, tasks.length)\n    todosStore.getTodoById(openTodoId.value).tasks.forEach((task) => {\n      tasks.push(cloneDeep(task))\n    })\n  }\n}\n\nconst createTask = (obj: TaskType) => {\n  tasks.push(obj)\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"button\", {\n        class: \"button-default\",\n        onClick: deleteTodo\n      }, \"Delete todo\"),\n      (isChanged.value)\n        ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 0,\n            class: \"button-destructive\",\n            onClick: saveChanges\n          }, \"Save сhanges\"))\n        : _createCommentVNode(\"\", true),\n      (isChanged.value)\n        ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 1,\n            class: \"button-secondary\",\n            onClick: undoChanges\n          }, \"Undo сhanges\"))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"button\", {\n        class: \"button-default\",\n        onClick: returnToTodoList\n      }, \"Return\")\n    ]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(TaskTitle, {\n        \"new-title\": newTitle.value,\n        \"old-title\": openTodoId.value ? _unref(todosStore).getTodoById(openTodoId.value).title : '',\n        onUpdateNewTitle: updateNewTitle\n      }, null, 8, [\"new-title\", \"old-title\"]),\n      _createVNode(TasksBody, {\n        onDeleteTaskPermanently: deleteTaskPermanently,\n        onSetNewTaskTitle: setNewTaskTitle,\n        onCreateTask: createTask,\n        \"tasks-in-store\": openTodoId.value ? _unref(todosStore).getTodoById(openTodoId.value).tasks : [],\n        tasks: tasks\n      }, null, 8, [\"tasks-in-store\", \"tasks\"]),\n      (showDialog.value)\n        ? (_openBlock(), _createBlock(DialogWindow, {\n            key: 0,\n            title: isChangesNotSaved.value ? 'Changes not saved!' : 'Delete todo?',\n            description: isChangesNotSaved.value ? 'Do you want to save changes?' : 'Are you sure you want to delete todo?',\n            onCloseDialog: closeDialog,\n            onDeleteTodoPermanently: doAction\n          }, null, 8, [\"title\", \"description\"]))\n        : _createCommentVNode(\"\", true)\n    ])\n  ]))\n}\n}\n\n})","<template>\n  <div>\n    <div class=\"tasks-button-group\">\n      <button class=\"button-default\" @click=\"deleteTodo\">Delete todo</button>\n      <button v-if=\"isChanged\" class=\"button-destructive\" @click=\"saveChanges\">Save сhanges</button>\n      <button v-if=\"isChanged\" class=\"button-secondary\" @click=\"undoChanges\">Undo сhanges</button>\n      <button class=\"button-default\" @click=\"returnToTodoList\">Return</button>\n    </div>\n    <div class=\"task-wrapp\">\n      <TaskTitle\n        :new-title=\"newTitle\"\n        :old-title=\"openTodoId ? todosStore.getTodoById(openTodoId).title : ''\"\n        @updateNewTitle=\"updateNewTitle\"\n      />\n\n      <TasksBody\n        @deleteTaskPermanently=\"deleteTaskPermanently\"\n        @setNewTaskTitle=\"setNewTaskTitle\"\n        @createTask=\"createTask\"\n        :tasks-in-store=\"openTodoId ? todosStore.getTodoById(openTodoId).tasks : []\"\n        :tasks=\"tasks\"\n      />\n\n      <DialogWindow\n        v-if=\"showDialog\"\n        :title=\"isChangesNotSaved ? 'Changes not saved!' : 'Delete todo?'\"\n        :description=\"isChangesNotSaved ? 'Do you want to save changes?' : 'Are you sure you want to delete todo?'\"\n        @closeDialog=\"closeDialog\"\n        @deleteTodoPermanently=\"doAction\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport _ from 'lodash'\nimport { computed, onBeforeMount, reactive, ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport type { TaskType } from '@/types'\nimport { useTodosStore } from '@/store/todoList.store'\nimport TaskTitle from './TaskTitle.vue'\nimport TasksBody from './TasksBody.vue'\nimport DialogWindow from './DialogWindow.vue'\nimport '@/assets/css/styles.css'\n\nconst todosStore = useTodosStore()\nconst router = useRouter()\n\nconst { cloneDeep, isEqual } = _\n\nconst showDialog = ref<boolean>(false)\nconst isChangesNotSaved = ref<boolean>(false)\n\nconst openTodoId = computed(() => todosStore.openTodoId)\nconst newTitle = ref<string>('')\nconst tasks = reactive<TaskType[]>(openTodoId.value ? cloneDeep(todosStore.getTodoById(openTodoId.value).tasks) : [])\nconst isChanged = computed(\n  () =>\n    (openTodoId.value && newTitle.value && todosStore.getTodoById(openTodoId.value).title !== newTitle.value) ||\n    (openTodoId.value && !isEqual(tasks, todosStore.getTodoById(openTodoId.value).tasks)),\n)\n\nonBeforeMount(() => {\n  const url = new URL(window.location.href)\n  const currentId = url.pathname.split('/')[url.pathname.split('/').length - 1]\n  const todoJSON = localStorage.getItem('todoList') || ''\n  const idFromLocalStorage = localStorage.getItem('todoId')\n  if (todoJSON.length) {\n    todosStore.setTodoList(todoJSON)\n    if (idFromLocalStorage && idFromLocalStorage === currentId) {\n      if (!openTodoId.value) {\n        todosStore.updateOpenTodoId(Number(currentId))\n      }\n      if (!tasks.length) {\n        cloneDeep(todosStore.getTodoById(Number(currentId)).tasks).forEach((task) => {\n          tasks.push(task)\n        })\n      }\n      return\n    }\n    router.push('/todo_list')\n    return\n  }\n\n  router.push('/')\n})\n\nconst deleteTodo = () => {\n  showDialog.value = true\n}\n\nconst closeDialog = () => {\n  showDialog.value = false\n  if (isChangesNotSaved.value) {\n    isChangesNotSaved.value = false\n    router.push('/todo_list')\n  }\n}\n\nconst saveChanges = () => {\n  if (isChanged.value && openTodoId.value) {\n    todosStore.updateTodo(openTodoId.value, newTitle.value, tasks)\n    isChangesNotSaved.value = false\n    newTitle.value = ''\n  }\n}\n\nconst doAction = () => {\n  if (isChangesNotSaved.value && openTodoId.value) {\n    todosStore.updateTodo(openTodoId.value, newTitle.value, tasks)\n    showDialog.value = false\n    newTitle.value = ''\n    localStorage.setItem('todoId', String(''))\n    router.push('/todo_list')\n    return\n  }\n\n  if (openTodoId.value) {\n    todosStore.deleteTodo(openTodoId.value)\n  }\n\n  showDialog.value = false\n  localStorage.setItem('todoId', String(''))\n  router.push('/todo_list')\n}\n\nconst returnToTodoList = () => {\n  if (openTodoId.value && !isEqual(tasks, todosStore.getTodoById(openTodoId.value).tasks)) {\n    tasks.forEach((task) => {\n      if (!task.task.split('. ').splice(1).join('. ') && openTodoId.value) {\n        task.task =\n          task.task.split('. ')[0] +\n          '. ' +\n          todosStore\n            .getTodoById(openTodoId.value)\n            .tasks.filter((item) => item.id === task.id)[0]\n            .task.split('. ')\n            .splice(1)\n            .join('. ')\n      }\n    })\n  }\n\n  if (\n    (openTodoId.value && newTitle.value && todosStore.getTodoById(openTodoId.value).title !== newTitle.value) ||\n    (openTodoId.value && !isEqual(tasks, todosStore.getTodoById(openTodoId.value).tasks))\n  ) {\n    isChangesNotSaved.value = true\n    showDialog.value = true\n    return\n  }\n  localStorage.setItem('todoId', String(''))\n  router.push('/todo_list')\n}\n\nconst updateNewTitle = (newVal: string) => {\n  newTitle.value = newVal\n}\n\nconst deleteTaskPermanently = (id: number) => {\n  const index = tasks.findIndex((task) => task.id === id)\n  if (index !== -1) {\n    tasks.splice(index, 1)\n    tasks.forEach((task, index) => {\n      const label = task.task.split('. ')\n      label[0] = `${index + 1}`\n      task.task = label.join('. ')\n    })\n  }\n}\n\nconst setNewTaskTitle = (id: number, label: string) => {\n  const index = tasks.findIndex((task) => task.id === id)\n  if (index !== -1) {\n    tasks.forEach((task) => {\n      task.task = task.task.split('. ').splice(1).join('. ')\n    })\n    tasks[index].task = label\n    tasks.forEach((task, index) => {\n      task.task = `${index + 1}. ${task.task}`\n    })\n  }\n}\n\nconst undoChanges = () => {\n  if (openTodoId.value) {\n    newTitle.value = ''\n    tasks.splice(0, tasks.length)\n    todosStore.getTodoById(openTodoId.value).tasks.forEach((task) => {\n      tasks.push(cloneDeep(task))\n    })\n  }\n}\n\nconst createTask = (obj: TaskType) => {\n  tasks.push(obj)\n}\n</script>\n\n<style scoped></style>\n","import script from \"./TasksComponent.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./TasksComponent.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { render } from \"./TodoDetail.vue?vue&type=template&id=a9c2a74a&ts=true\"\nimport script from \"./TodoDetail.vue?vue&type=script&lang=ts\"\nexport * from \"./TodoDetail.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  id: \"modal\",\n  class: \"modal\"\n}\nconst _hoisted_2 = { class: \"modal-content\" }\nconst _hoisted_3 = { class: \"modal-header\" }\nconst _hoisted_4 = { id: \"modal-title\" }\nconst _hoisted_5 = { class: \"modal-body\" }\n\n\nimport '@/assets/css/styles.css'\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'DialogWindow',\n  props: {\n  title: {\n    type: String,\n    required: true,\n  },\n  description: {\n    type: String,\n    required: true,\n  },\n},\n  emits: ['closeDialog', 'deleteTodoPermanently'],\n  setup(__props, { emit: __emit }) {\n\nconst props = __props\n\nconst emit = __emit\n\nconst closeDialog = () => {\n  emit('closeDialog')\n}\n\nconst deleteTodoPermanently = () => {\n  emit('deleteTodoPermanently')\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"h2\", _hoisted_4, _toDisplayString(props.title), 1),\n        _createElementVNode(\"span\", {\n          class: \"close\",\n          id: \"close-modal\",\n          onClick: closeDialog\n        }, \"×\")\n      ]),\n      _createElementVNode(\"div\", _hoisted_5, [\n        _createElementVNode(\"p\", null, _toDisplayString(props.description), 1)\n      ]),\n      _createElementVNode(\"div\", { class: \"modal-footer buttons-group\" }, [\n        _createElementVNode(\"button\", {\n          id: \"no-button\",\n          class: \"button button-default\",\n          onClick: closeDialog\n        }, \"No\"),\n        _createElementVNode(\"button\", {\n          id: \"ok-button\",\n          class: \"button button-secondary\",\n          onClick: deleteTodoPermanently\n        }, \"Ok\")\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\n  <div id=\"modal\" class=\"modal\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 id=\"modal-title\">{{ props.title }}</h2>\n        <span class=\"close\" id=\"close-modal\" @click=\"closeDialog\">&times;</span>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ props.description }}</p>\n      </div>\n      <div class=\"modal-footer buttons-group\">\n        <button id=\"no-button\" class=\"button button-default\" @click=\"closeDialog\">No</button>\n        <button id=\"ok-button\" class=\"button button-secondary\" @click=\"deleteTodoPermanently\">Ok</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { defineProps, defineEmits } from 'vue'\nimport '@/assets/css/styles.css'\n\nconst props = defineProps({\n  title: {\n    type: String,\n    required: true,\n  },\n  description: {\n    type: String,\n    required: true,\n  },\n})\n\nconst emit = defineEmits(['closeDialog', 'deleteTodoPermanently'])\n\nconst closeDialog = () => {\n  emit('closeDialog')\n}\n\nconst deleteTodoPermanently = () => {\n  emit('deleteTodoPermanently')\n}\n</script>\n\n<style scoped></style>\n","import script from \"./DialogWindow.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./DialogWindow.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_TasksComponent","_resolveComponent","_openBlock","_createBlock","_hoisted_1","key","class","_hoisted_2","_hoisted_3","_defineComponent","__name","props","newTitle","oldTitle","emits","setup","__props","emit","__emit","titleIsNotEditing","ref","taskTitle","toUpperCase","cancelEditing","value","editTitle","setNewTaskTitle","_createElementBlock","_createElementVNode","_toDisplayString","length","onClick","for","_withDirectives","id","$event","type","placeholder","_vModelText","__exports__","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","tasksInStore","tasks","cloneDeep","_","showDialog","isShowed","taskText","deletedTaskId","currentTasks","reactive","map","task","label","split","splice","join","editTaskId","isShowCancelButton","computed","modifiedTasks","filter","idsForFilter","forEach","index1","findIndex","index2","push","deleteTask","closeDialog","deleteTaskPermanently","index","taskById","getEditTaskId","cancelChanges","onHide","onShow","deleteNewTask","event","preventDefault","createTask","isDone","_Fragment","_renderList","_vModelCheckbox","item","includes","_createCommentVNode","disabled","DialogWindow","title","description","onCloseDialog","onDeleteTodoPermanently","todosStore","useTodosStore","router","useRouter","isEqual","isChangesNotSaved","openTodoId","getTodoById","isChanged","onBeforeMount","url","URL","window","location","href","currentId","pathname","todoJSON","localStorage","getItem","idFromLocalStorage","setTodoList","updateOpenTodoId","Number","deleteTodo","saveChanges","updateTodo","doAction","setItem","String","returnToTodoList","updateNewTitle","newVal","undoChanges","obj","_createVNode","TaskTitle","_unref","onUpdateNewTitle","TasksBody","onDeleteTaskPermanently","onSetNewTaskTitle","onCreateTask","defineComponent","components","TasksComponent","required","deleteTodoPermanently"],"sourceRoot":""}